version: '3.7'

services:
  db:
    environment:
      POSTGRES_MULTIPLE_DATABASES: port_db, mikro_db, lok_db, rekuest_db, fluss_db, mikronew_db
      POSTGRES_PASSWORD: {{postgres_password}}
      POSTGRES_USER: {{postgres_user}}
    image: jhnnsrs/daten:prod
    labels:
      - "arkitekt.{{name}}.service=db"
  orkestrator:
    image: jhnnsrs/orkestrator:paper
    ports:
      - {{start_port + orkestrator_port_increment}}:80
    labels:
      - "arkitekt.{{name}}.service=orkestrator"
  fluss:
    depends_on:
    - redis
    - db
    image: jhnnsrs/fluss:paper
    ports:
    - {{start_port + fluss_port_increment}}:80
    volumes:
    - ./configs/fluss.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.{{name}}.service=fluss"
  initc:
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_HOST: http://minio:9000
      MINIO_ROOT_PASSWORD: {{minio_root_password}}
      MINIO_ROOT_USER: {{minio_root_user}}
    image: jhnnsrs/init:paper
    volumes:
    - ./configs/minio.yaml:/workspace/config.yaml
  lok:
    depends_on:
    - redis
    - db
    image: jhnnsrs/lok:paper
    command: bash run-debug.sh
    ports:
    - {{start_port + lok_port_increment}}:80
    volumes:
    - ./configs/lok.yaml:/workspace/config.yaml
    - ./fakts:/workspace/fakts
    labels:
      - "arkitekt.{{name}}.service=lok"
  mikro:
    depends_on:
    - redis
    - db
    - minio
    image: jhnnsrs/mikro:paper
    command: bash run-debug.sh
    ports:
    - {{start_port + mikro_port_increment}}:80
    volumes:
    - ./configs/mikro.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.{{name}}.service=mikro"
  minio:
    command: server /data  --console-address ":9001"
    environment:
      MINIO_ROOT_PASSWORD: {{minio_root_password}}
      MINIO_ROOT_USER: {{minio_root_user}}
    image: minio/minio:RELEASE.2023-02-10T18-48-39Z
    ports:
    - {{start_port + minio_port_increment}}:9000
    - {{start_port + minio_port_increment + 1}}:9001
    volumes:
    - ./data:/data
    labels:
      - "arkitekt.{{name}}.service=s3"
  port:
    depends_on:
    - lok
    - db
    - redis
    image: jhnnsrs/port:paper
    command: bash run.sh
    ports:
    - {{start_port + port_port_increment}}:80
    volumes:
      - ./configs/port.yaml:/workspace/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "arkitekt.{{name}}.service=port"
  portbridge:
    depends_on:
    - lok
    - db
    - redis
    image: jhnnsrs/port:paper
    command: bash run-worker.sh
    volumes:
      - ./configs/port.yaml:/workspace/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "arkitekt.{{name}}.service=portbrdige"
  rabbitmq:
    command: rabbitmq-server
    image: jhnnsrs/mister:fancy
    labels:
      - "arkitekt.{{name}}.service=rabbitmq"
  redis:
    image: redis:latest
    labels:
      - "arkitekt.{{name}}.service=redis"
  rekuest:
    depends_on:
    - redis
    - db
    - rabbitmq
    image: jhnnsrs/rekuest:paper
    ports:
    - {{start_port + rekuest_port_increment}}:80
    volumes:
    - ./configs/rekuest.yaml:/workspace/config.yaml
    labels:
    - "arkitekt.{{name}}.service=rekuest"
    
