version: '3.7'

services:
  db:
    environment:
      POSTGRES_MULTIPLE_DATABASES: port_db, mikro_db, lok_db, rekuest_db, fluss_db, mikronew_db
      POSTGRES_PASSWORD: 916430dd3aebc365f94d3b86ff5c72c5
      POSTGRES_USER: b009c3507fd48beb9d7b05259fa18da6
    image: jhnnsrs/daten:prod
    labels:
      - "arkitekt.default.service=db"
  fluss:
    depends_on:
    - redis
    - db
    image: jhnnsrs/fluss:paper
    ports:
    - 8040:8070
    volumes:
    - ./configs/fluss.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=fluss"
  initc:
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_HOST: http://minio:8090
      MINIO_ROOT_PASSWORD: 334e6f5ded354784d513c16d41ac2c05
      MINIO_ROOT_USER: 784dab7184afc1b4dad673ab92e72b34
    image: jhnnsrs/init:paper
    volumes:
    - ./configs/minio.yaml:/workspace/config.yaml
  lok:
    depends_on:
    - redis
    - db
    image: jhnnsrs/lok:paper
    command: bash run-debug.sh
    ports:
    - 8000:8000
    volumes:
    - ./configs/lok.yaml:/workspace/config.yaml
    - ./fakts:/workspace/fakts
    labels:
      - "arkitekt.default.service=lok"
  mikro:
    depends_on:
    - redis
    - db
    - minio
    image: jhnnsrs/mikro:paper
    command: bash run-debug.sh
    ports:
    - 8020:8080
    volumes:
    - ./configs/mikro.yaml:/workspace/config.yaml
    labels:
      - "arkitekt.default.service=mikro"
  minio:
    command: server /data  --console-address ":9001"
    environment:
      MINIO_ROOT_PASSWORD: 334e6f5ded354784d513c16d41ac2c05
      MINIO_ROOT_USER: 784dab7184afc1b4dad673ab92e72b34}
    image: minio/minio:RELEASE.2023-02-10T18-48-39Z
    ports:
    - 8090:9000
    - 8091:9001
    volumes:
    - ./data:/data
    labels:
      - "arkitekt.default.service=s3"
  port:
    depends_on:
    - lok
    - db
    - redis
    image: jhnnsrs/port:paper
    command: bash run-debug.sh
    ports:
    - 8030:8050
    volumes:
      - ./configs/port.yaml:/workspace/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "arkitekt.default.service=port"
  rabbitmq:
    command: rabbitmq-server
    image: jhnnsrs/mister:fancy
    labels:
      - "arkitekt.default.service=rabbitmq"
  redis:
    image: redis:latest
    labels:
      - "arkitekt.default.service=redis"
  rekuest:
    depends_on:
    - redis
    - db
    - rabbitmq
    image: jhnnsrs/rekuest:paper
    ports:
    - 8010:8090
    volumes:
    - ./configs/rekuest.yaml:/workspace/config.yaml
    labels:
    - "arkitekt.default.service=rekuest"
    